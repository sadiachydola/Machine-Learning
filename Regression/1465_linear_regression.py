# -*- coding: utf-8 -*-
"""1465_linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m-0lo5sFQCCYICKBs3vqbT5qZC_Atwji

# Linear Regression

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset(50_Startups)"""

from google.colab import drive
drive.mount('/content/drive')

"""## 1. R&D Spend"""

dataset=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Mllab/Datasets/50_Startups.csv')
dataset
X = dataset.iloc[:,0].values
y = dataset.iloc[:,4].values
print(X)

"""## 2. Administration"""

dataset=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Mllab/Datasets/50_Startups.csv')
dataset
X = dataset.iloc[:,1].values
y = dataset.iloc[:,4].values
print(X)

"""## 3. Marketing Spend"""

dataset=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Mllab/Datasets/50_Startups.csv')
dataset
X = dataset.iloc[:,2].values
y = dataset.iloc[:,4].values
print(X)

print(y)

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

print(X_train)

"""## Feature Scaling

## Training the Linear regression model with the training data
"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
#X_train = reshape((1,1))
regressor.fit(X_train.reshape(-1,1), y_train.reshape(-1,1))

"""## Predict test set result"""

y_pred = regressor.predict(X_test.reshape(-1,1))

"""### 1. R&D Spend (Training Set)"""

plt.scatter(X_train, y_train, marker='X',color='red')
plt.plot(X_train, regressor.predict(X_train.reshape(-1,1)), color='blue')
plt.title('R&D Spend vs Profit (Training set)')
plt.xlabel('R&D Spend')
plt.ylabel('Profit')
plt.show()

"""### 2. Administration (Training Set)"""

plt.scatter(X_train, y_train, marker='X',color='red')
plt.plot(X_train, regressor.predict(X_train.reshape(-1,1)), color='blue')
plt.title('Administration vs Profit (Training set)')
plt.xlabel('Administration')
plt.ylabel('Profit')
plt.show()

"""### 3. Marketing Spend (Training Set)"""

plt.scatter(X_train, y_train, marker='X',color='red')
plt.plot(X_train, regressor.predict(X_train.reshape(-1,1)), color='blue')
plt.title('Marketing Spend vs Profit (Training set)')
plt.xlabel('Marketing Spend')
plt.ylabel('Profit')
plt.show()

"""## Visualise the test set result

### 1. R&D Spend (Testing Set)
"""

plt.scatter(X_train, y_train, color='red')
plt.scatter(X_test, y_test, color='blue')
plt.plot(X_test, regressor.predict(X_test.reshape(-1,1)), color = 'red')
plt.title('R&D Spend vs Profit (Testing set)')
plt.xlabel('R&D Spend')
plt.ylabel('Profit')
plt.show()

"""### 2. Adminstration (Testing Set)"""

plt.scatter(X_train, y_train, color='red')
plt.scatter(X_test, y_test, color='blue')
plt.plot(X_test, regressor.predict(X_test.reshape(-1,1)), color = 'red')
plt.title('Adminstration vs Profit (Testing set)')
plt.xlabel('Adminstration')
plt.ylabel('Profit')
plt.show()

"""### 3. Marketing Spend (Testing set)"""

plt.scatter(X_train, y_train, color='red')
plt.scatter(X_test, y_test, color='blue')
plt.plot(X_test, regressor.predict(X_test.reshape(-1,1)), color = 'red')
plt.title('Marketing Spend vs Profit (Testing set)')
plt.xlabel('Marketing Spend')
plt.ylabel('Profit')
plt.show()